# this file defines a set of jobs that will run when triggered on a cloned version of your repo.
# a job is a set of steps
# by default, there's just one job, and you don't give it a list of steps

# by default all branches get built
# but adding a trigger configuration like this says "only build master branch"
trigger:
- master

# a pool is a set of machines for running this job
# this configuration says: "use Microsoft's hosted Ubuntu Linux virtual machines"
# (we could, if we wanted, have it connect to a machine WE control to run the job on)
pool:
  vmImage: 'ubuntu-latest'

# the steps in the job
# "script" is one kind of step - on linux it'll run in bash
# on windows it'll run in command prompt
# give all steps a good display name
steps:

#- script: echo Hello, world!
#  displayName: Run a one-line script

#- script: |
#    echo "Showing current directory contents"
#    ls
#  displayName: Show directory contents

#runs build
- script: dotnet build
  displayName: dotnet build

#runs tests continues despite test fail
#- script: dotnet test
#  continueOnError: true
#  displayName: dotnet test

# apart from script, there are also "task" steps
# a task step implements common build operations that would be clumsy
# to write by hand in a script step
- script: dotnet test --logger trx
  continueOnError: true
  displayName: dotnet test

# the default condition for every step is "succeeded()" --run this step if every previous step succeeded
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

# search repo for any ASP.Net project, runs dotnet publish, and zips the results 
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true

# built in task best way to deploy to azure app service
# this task looks for a zip file and deploys it to your app service
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(61757056-d06b-4ce2-a315-9821c05c50fe)'
    appType: 'webApp'
    WebAppName: 'p1-bookstore-crownover'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'