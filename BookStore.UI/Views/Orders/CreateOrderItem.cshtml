@model BookStore.UI.Models.CreateOrderViewModel

@{
    ViewData["Title"] = "CreateOrderItem";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/css/site.css" />
</head>
<h1>Add Item to Order</h1>

@if (!ViewData.ModelState.IsValid && ViewData.ModelState["QuantityError"].Errors.Count > 0)
{
    <div class="my-alert">
        <strong>Error!</strong> @ViewData.ModelState["QuantityError"].Errors.First().ErrorMessage
    </div>
}
<hr />
<table class="table">
    <tbody id="item-card-container" style="display:flex;justify-content:space-around;max-width:80vw;flex-wrap:wrap">
            @foreach (var item in Model.Inventory)
            {
                Html.RenderPartial("_ItemCard", item);
            }
    </tbody>
</table>

<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateOrderItem">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.Item.Inventory" class="control-label">Product Name</label>
                <select asp-for="@Model.Item.Inventory" class="form-control" asp-items="ViewBag.ProductId"></select>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Item.Quantity" class="control-label">Quantity</label>
                <input asp-for="@Model.Item.Quantity" class="form-control" />
                <span asp-validation-for="@Model.Item.Quantity" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <input asp-action="AddMore" type="submit" value="Add more items" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
